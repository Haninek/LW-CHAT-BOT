Warn (polish soon)

Deal status enum still default "active" (server/models/deal.py). Your UI/routes assume open|offer|accepted|signed|declined|closed. Normalize to that set and migrate existing rows.

DB layer (server/core/database.py) hard-pins SQLite (sqlite:///./data.db) and uses Base.metadata.create_all(). Use settings.DATABASE_URL and proper migrations for staging/prod.

S3 dev fallback: server/services/storage.py always calls S3. Add a local fallback (e.g., write to ./data/uploads) when MOCK_MODE=true or no AWS creds.

❌ Fail (fix before pilot)

Broken config (import-time failure)

File: server/core/config.py

Problem: It still contains literal ... placeholders; AWS fields (e.g., AWS_REGION, S3_BUCKET) aren’t defined. Anything importing settings.AWS_REGION will crash.

Fix: Replace with a complete Settings class (like the one I gave you). Make sure cors_origins_list exists and all S3/webhook secrets are real fields.

Migrations can’t run

Files: alembic/versions/uwizard_events_dealid.py, uwizard_documents_s3.py, uwizard_consents.py

Problems:

No alembic/env.py (and no alembic.ini) in the repo.

uwizard_events_dealid.py has down_revision = "<PUT_PREV_REVISION>".

Fix: Add a standard Alembic setup, set down_revision to your current latest revision, and ensure alembic upgrade head works locally.

Events model doesn’t match routes

File: server/models/event.py

Problem: Model lacks deal_id and tenant_id, but routes write them (e.g., routes/background.py, routes/sms.py). Also routes sometimes write data={...} while model has data_json (Text).

Fix: Add deal_id and tenant_id columns (plus indexes) to the model, and make all writers use a single field name (data_json=json.dumps(...)). Update readers accordingly.

Idempotency is only on SMS

Files: multiple

Problem: require_idempotency/store_idempotent only applied in server/routes/sms.py. The rest of the POST routes still lack it.

Fix: Add the idempotency wrapper to:
/api/deals/start, /api/intake/answer, /api/documents/bank/upload, /api/deals/{id}/offers, /api/background/run, /api/sign/send.

Offers route is incomplete

File: server/routes/offers.py

Problem: Handler builds the response but never returns it (ends without return resp) and I don’t see a DB write of an offer.generated event.

Fix: Finish the function (return the payload; optionally write an event with deal_id).

Signing webhook lacks signature verification

File: server/routes/sign.py

Problem: Processes webhooks without verifying DocuSign/Dropbox-Sign signatures. Also event writes use only merchant_id (no deal_id).

Fix: Verify provider signatures, enforce inbound idempotency, and include deal_id on events.

Document schema mismatch

Files: server/models/document.py (table documents) vs migration uwizard_documents_s3.py (table bank_documents)

Problem: Migration alters bank_documents, but the model/table is documents.

Fix: Point the migration to the correct table (documents) or rename the model/table consistently.

Config usage is inconsistent

Some modules import from core.config import settings, others use get_settings(). Pick one style; I recommend get_settings() inside functions to avoid import-time surprises.

Exact file hits I checked

server/core/config.py → incomplete; contains ...

server/core/idempotency.py → present; only SMS uses it today

server/routes/sms.py → present; idempotent; minor mismatch uses data=... event payload (should be data_json=...)

server/routes/documents.py → hardened upload; good checks; uses Document and S3 helpers

server/services/storage.py → S3-only (no dev fallback)

server/services/antivirus.py → OK

server/models/event.py → no deal_id, tenant_id; data_json only

server/models/document.py → table documents; still has file_data BLOB (deprecated)

alembic/versions/* → present; events migration has placeholder down_revision; no env/ini

server/routes/offers.py → no final return

server/routes/sign.py → no signature verification

server/core/database.py → hardcoded SQLite + create_all()

What to change (surgical)

Replace server/core/config.py with the full Settings we provided earlier (no ... placeholders).

Add Alembic scaffolding (alembic.ini, alembic/env.py), set real down_revisions, and run migrations locally.

Update server/models/event.py with deal_id, tenant_id columns, and standardize data_json. Adjust all Event writes.

Wrap the remaining POST routes with the idempotency dependency.

Finish server/routes/offers.py (return response; write offer.generated event).

Add signature verification + inbound idempotency to server/routes/sign.py and include deal_id.

Fix migration/table name mismatch for documents; either migrate documents or rename the model.

In server/core/database.py, respect settings.DATABASE_URL and stop forcing SQLite. Keep SQLite only for local dev via .env.

Add a local storage fallback in server/services/storage.py when MOCK_MODE=true or creds missing.

Quick re-smoke once you patch

Run these and ensure they 200 and behave:

# start or reuse deal
POST /api/deals/start  (with X-Tenant-ID + Idempotency-Key)

# intake ask-only
POST /api/intake/answer  (returns missing + confirm arrays)

# upload exactly 3 PDFs
POST /api/documents/bank/upload?merchant_id=..&deal_id=..

# offers (returns 3 & writes offer.generated event)
POST /api/deals/{id}/offers

# accept, then background (flags-only)
POST /api/deals/{id}/accept
POST /api/background/run?merchant_id=..&deal_id=..

# sign (blocks unless background OK; force=true overrides; webhook verifies signatures)
POST /api/sign/send?deal_id=..&recipient_email=..&force=false

# sms send + STOP
POST /api/sms/cherry/send
POST /api/sms/cherry/webhook  (with {"type":"inbound","from":"+1...","text":"STOP"})