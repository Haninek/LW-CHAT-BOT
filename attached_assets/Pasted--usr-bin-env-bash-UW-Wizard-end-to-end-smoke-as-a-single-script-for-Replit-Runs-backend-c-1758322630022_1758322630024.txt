#!/usr/bin/env bash
# UW Wizard — end-to-end smoke as a single script for Replit
# Runs backend, creates a deal, uploads PDFs, generates offers, runs background check, accepts, and checks public deals.

set -euo pipefail

# ---------- CONFIG (override via env) ----------
APP_MODULE="${APP_MODULE:-server.main:app}"      # FastAPI app import path
HOST="${HOST:-0.0.0.0}"
PORT="${PORT:-8000}"
BASE="${BASE:-http://localhost:${PORT}}"

AUTH_TOKEN="${AUTH_TOKEN:-dev}"                  # dev auth token
TENANT_ID="${TENANT_ID:-T1}"
PARTNER_KEY="${PARTNER_KEY:-demo}"              # for /background/check

IDEM1="${IDEM1:-k1}"
IDEM2="${IDEM2:-k2}"
IDEM3="${IDEM3:-k3}"
IDEM4="${IDEM4:-k4}"
IDEM5="${IDEM5:-k5}"

# ---------- HELPERS ----------
green(){ printf "\033[32m%s\033[0m\n" "$*"; }
red(){   printf "\033[31m%s\033[0m\n" "$*"; }
die(){ red "ERROR: $*"; exit 1; }

curl_json(){ curl -sS -H "Content-Type: application/json" "$@"; }
hdr_auth(){ printf '%s\n' "-H" "Authorization: Bearer ${AUTH_TOKEN}" "-H" "X-Tenant-ID:${TENANT_ID}"; }

json_field_py(){  # usage: echo "$JSON" | json_field_py key
python - "$@" <<'PY'
import sys, json
data=json.load(sys.stdin)
for key in sys.argv[1:]:
    data=data.get(key,"")
print(data if data is not None else "")
PY
}

# ---------- 0) (Re)start backend ----------
pkill -f "uvicorn .*${APP_MODULE}" >/dev/null 2>&1 || true
uvicorn "${APP_MODULE}" --host "${HOST}" --port "${PORT}" --reload >/tmp/uwizard.log 2>&1 &
SVR_PID=$!
trap 'kill -9 $SVR_PID >/dev/null 2>&1 || true' EXIT

# Wait for health
for i in {1..60}; do
  if curl -fsS "${BASE}/api/healthz" >/dev/null; then green "API up: ${BASE}"; break; fi
  sleep 0.5
  [[ $i -eq 60 ]] && die "API did not come up. See /tmp/uwizard.log"
done

# ---------- 1) Create a deal (idempotent) ----------
CREATE_BODY='{"merchant_hint":{"phone":"+19735550188","legal_name":"Maple Deli LLC"},"create_if_missing":true}'
RESP="$(curl_json -X POST "${BASE}/api/deals/start" -H "Idempotency-Key: ${IDEM1}" $(hdr_auth) -d "${CREATE_BODY}")" || die "deal/start failed"
echo "${RESP}" | sed 's/,"/\n"/g' | sed 's/{//;s/}//' || true

MID="$(echo "${RESP}" | json_field_py merchant_id)"
DID="$(echo "${RESP}" | json_field_py deal_id)"
[[ -n "${MID}" && -n "${DID}" ]] || die "Could not parse merchant_id/deal_id"

green "Created/loaded deal: DID=${DID} MID=${MID}"

# ---------- 2) Create minimal valid PDFs ----------
for f in one two three; do
  cat > "${f}.pdf" <<'PDF'
%PDF-1.4
1 0 obj<<>>endobj
trailer<<>> 
%%EOF
PDF
done
green "Created minimal PDFs: one.pdf two.pdf three.pdf"

# ---------- 3) Upload exactly 3 PDFs ----------
UPLOAD_URL="${BASE}/api/documents/bank/upload?merchant_id=${MID}&deal_id=${DID}"
RESP="$(curl -sS -X POST "${UPLOAD_URL}" -H "Idempotency-Key: ${IDEM2}" $(hdr_auth) \
  -F "files=@one.pdf" -F "files=@two.pdf" -F "files=@three.pdf")" || die "bank/upload failed"
echo "${RESP}" | sed 's/,"/\n"/g' | sed 's/{//;s/}//' || true
green "Uploaded 3 PDFs"

# ---------- 4) Generate offers (correct route) ----------
RESP="$(curl_json -X POST "${BASE}/api/deals/${DID}/offers" -H "Idempotency-Key: ${IDEM3}" $(hdr_auth) -d "{}")" || die "offers failed"
echo "${RESP}" | sed 's/,"/\n"/g' | sed 's/{//;s/}//' || true
green "Offers generated"

# ---------- 5) Background check (requires partner key) ----------
BG_BODY='{"merchant_id":"'"${MID}"'","person":{"first_name":"A","last_name":"B"},"business":{"legal_name":"Maple Deli LLC"}}'
RESP="$(curl_json -X POST "${BASE}/api/background/check" -H "Idempotency-Key: ${IDEM4}" $(hdr_auth) -H "X-Partner-Key: ${PARTNER_KEY}" -d "${BG_BODY}")" \
  || die "background/check failed"
echo "${RESP}" | sed 's/,"/\n"/g' | sed 's/{//;s/}//' || true
green "Background check posted"

# ---------- 6) Accept the offer (idempotent) ----------
RESP="$(curl_json -X POST "${BASE}/api/deals/${DID}/accept" -H "Idempotency-Key: ${IDEM5}" $(hdr_auth) -d "{}")" \
  || die "deal accept failed"
echo "${RESP}" | sed 's/,"/\n"/g' | sed 's/{//;s/}//' || true
green "Deal accepted"

# ---------- 7) Public deals (no auth required) ----------
echo "Public deals (top):"
curl -sS "${BASE}/api/public/deals" | sed -e 's/},{/},\n{/g' | head -n 20

green "SMOKE: OK  ✅"
